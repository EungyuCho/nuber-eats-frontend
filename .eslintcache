[{"C:\\nodejs\\nuber-eats-front\\src\\index.tsx":"1","C:\\nodejs\\nuber-eats-front\\src\\reportWebVitals.ts":"2","C:\\nodejs\\nuber-eats-front\\src\\App.tsx":"3","C:\\nodejs\\nuber-eats-front\\src\\apollo.ts":"4","C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-out-router.tsx":"5","C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-in-router.tsx":"6","C:\\nodejs\\nuber-eats-front\\src\\pages\\login.tsx":"7","C:\\nodejs\\nuber-eats-front\\src\\pages\\create-account.tsx":"8","C:\\nodejs\\nuber-eats-front\\src\\components\\form-error.tsx":"9","C:\\nodejs\\nuber-eats-front\\src\\components\\button.tsx":"10","C:\\nodejs\\nuber-eats-front\\src\\__generated__\\globalTypes.ts":"11","C:\\nodejs\\nuber-eats-front\\src\\constant.ts":"12","C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\restaurants.tsx":"13","C:\\nodejs\\nuber-eats-front\\src\\pages\\404.tsx":"14","C:\\nodejs\\nuber-eats-front\\src\\components\\underline-link.tsx":"15","C:\\nodejs\\nuber-eats-front\\src\\components\\header.tsx":"16","C:\\nodejs\\nuber-eats-front\\src\\components\\nuber-logo.tsx":"17","C:\\nodejs\\nuber-eats-front\\src\\hooks\\useMe.tsx":"18","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\confirm-email.tsx":"19","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\edit-profile.tsx":"20","C:\\nodejs\\nuber-eats-front\\src\\components\\restaurant.tsx":"21","C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\search.tsx":"22","C:\\nodejs\\nuber-eats-front\\src\\fragments.ts":"23","C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\category.tsx":"24"},{"size":755,"mtime":1611752144153,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":399,"mtime":1611539939751,"results":"28","hashOfConfig":"26"},{"size":1040,"mtime":1611759720312,"results":"29","hashOfConfig":"26"},{"size":594,"mtime":1611804637869,"results":"30","hashOfConfig":"26"},{"size":1446,"mtime":1612281322175,"results":"31","hashOfConfig":"26"},{"size":3774,"mtime":1611837654913,"results":"32","hashOfConfig":"26"},{"size":4213,"mtime":1611808013432,"results":"33","hashOfConfig":"26"},{"size":238,"mtime":1611559867753,"results":"34","hashOfConfig":"26"},{"size":489,"mtime":1611728043820,"results":"35","hashOfConfig":"26"},{"size":1078,"mtime":1612284158096,"results":"36","hashOfConfig":"26"},{"size":50,"mtime":1611749385860,"results":"37","hashOfConfig":"26"},{"size":4285,"mtime":1612283906332,"results":"38","hashOfConfig":"26"},{"size":585,"mtime":1612183566189,"results":"39","hashOfConfig":"26"},{"size":311,"mtime":1611805253112,"results":"40","hashOfConfig":"26"},{"size":970,"mtime":1612177827712,"results":"41","hashOfConfig":"26"},{"size":444,"mtime":1611813377318,"results":"42","hashOfConfig":"26"},{"size":298,"mtime":1611813610997,"results":"43","hashOfConfig":"26"},{"size":1810,"mtime":1612183599299,"results":"44","hashOfConfig":"26"},{"size":3026,"mtime":1612183633316,"results":"45","hashOfConfig":"26"},{"size":605,"mtime":1612273541111,"results":"46","hashOfConfig":"26"},{"size":1379,"mtime":1612280981577,"results":"47","hashOfConfig":"26"},{"size":384,"mtime":1612284087054,"results":"48","hashOfConfig":"26"},{"size":1006,"mtime":1612284213542,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hkr554",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\nodejs\\nuber-eats-front\\src\\index.tsx",[],["104","105"],"C:\\nodejs\\nuber-eats-front\\src\\reportWebVitals.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\App.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\apollo.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-out-router.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-in-router.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\login.tsx",["106","107"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\nimport { Button } from \"../components/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constant\";\r\nimport { NuberLogo } from \"../components/nuber-logo\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authTokenVar(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-28 lg:mt-10\">\r\n      <Helmet>\r\n        <title>Login | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <NuberLogo mb={10} />\r\n        <h4 className=\"w-full test-left text-3xl mb-5 font-bold\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"log in\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?{\" \"}\r\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\create-account.tsx",["108","109","110"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UnderlineLink } from \"../components/underline-link\";\r\nimport { NuberLogo } from \"../components/nuber-logo\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: {\r\n          createAccountInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-28 lg:mt-10\">\r\n      <Helmet>\r\n        <title>Create Account | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <NuberLogo mb={10} />\r\n        <h4 className=\"w-full test-left text-3xl mb-5 font-bold\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          <select name=\"role\" ref={register({ required: true })}>\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={false}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account? <UnderlineLink to=\"/\" message=\"Log in now\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\components\\form-error.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\button.tsx",["111"],"import react from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    className={`text-lg font-medium text-white py-4 transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-500 hover:bg-lime-600\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading...\" : actionText}\r\n  </button>\r\n);\r\n","C:\\nodejs\\nuber-eats-front\\src\\__generated__\\globalTypes.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\constant.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\restaurants.tsx",["112"],"C:\\nodejs\\nuber-eats-front\\src\\pages\\404.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\underline-link.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\header.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\nuber-logo.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\hooks\\useMe.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\confirm-email.tsx",["113","114"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    console.log(code);\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-bold\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-800 text-sm\">\r\n        Please wait, don't close this page...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\edit-profile.tsx",["115","116","117"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { data } from \"autoprefixer\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const onCompleted = (data: editProfile) => {\r\n    const {\r\n      editProfile: { ok },\r\n    } = data;\r\n\r\n    if (ok && userData) {\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n      if (prevEmail !== newEmail) {\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            email: newEmail,\r\n            verified: false,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edit Profile | Nuber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-bold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        className=\"grid gap-6 max-w-screen-sm mt-5 w-full mb-5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          name=\"email\"\r\n          className=\"input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          ref={register}\r\n          name=\"password\"\r\n          className=\"input\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Svae Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\components\\restaurant.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\search.tsx",["118","119"],"C:\\nodejs\\nuber-eats-front\\src\\fragments.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\category.tsx",["120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":88,"column":34,"nodeType":"127","messageId":"128","endLine":88,"endColumn":35,"suggestions":"129"},{"ruleId":"125","severity":1,"message":"126","line":88,"column":59,"nodeType":"127","messageId":"128","endLine":88,"endColumn":60,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":10,"nodeType":"133","messageId":"134","endLine":6,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":95,"column":34,"nodeType":"127","messageId":"128","endLine":95,"endColumn":35,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"126","line":95,"column":59,"nodeType":"127","messageId":"128","endLine":95,"endColumn":60,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"138","line":36,"column":11,"nodeType":"133","messageId":"134","endLine":36,"endColumn":21},{"ruleId":"131","severity":1,"message":"139","line":50,"column":12,"nodeType":"133","messageId":"134","endLine":50,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":59,"column":6,"nodeType":"142","endLine":59,"endColumn":8,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"144","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":93,"column":32,"nodeType":"127","messageId":"128","endLine":93,"endColumn":33,"suggestions":"145"},{"ruleId":"125","severity":1,"message":"126","line":93,"column":57,"nodeType":"127","messageId":"128","endLine":93,"endColumn":58,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"139","line":33,"column":12,"nodeType":"133","messageId":"134","endLine":33,"endColumn":13},{"ruleId":"140","severity":1,"message":"147","line":45,"column":6,"nodeType":"142","endLine":45,"endColumn":25,"suggestions":"148"},{"ruleId":"131","severity":1,"message":"149","line":32,"column":17,"nodeType":"133","messageId":"134","endLine":32,"endColumn":24},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["152","153"],["154","155"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["156","157"],["158","159"],"'react' is defined but never used.","'IFormProps' is defined but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'data' is defined but never used.",["161","162"],["163","164"],"React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.",["165"],"'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"166","fix":"167","desc":"168"},{"messageId":"169","fix":"170","desc":"171"},{"messageId":"166","fix":"172","desc":"168"},{"messageId":"169","fix":"173","desc":"171"},{"messageId":"166","fix":"174","desc":"168"},{"messageId":"169","fix":"175","desc":"171"},{"messageId":"166","fix":"176","desc":"168"},{"messageId":"169","fix":"177","desc":"171"},{"desc":"178","fix":"179"},{"messageId":"166","fix":"180","desc":"168"},{"messageId":"169","fix":"181","desc":"171"},{"messageId":"166","fix":"182","desc":"168"},{"messageId":"169","fix":"183","desc":"171"},{"desc":"184","fix":"185"},"removeEscape",{"range":"186","text":"187"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"188","text":"189"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"190","text":"187"},{"range":"191","text":"189"},{"range":"192","text":"187"},{"range":"193","text":"189"},{"range":"194","text":"187"},{"range":"195","text":"189"},"Update the dependencies array to be: [verifyEmail]",{"range":"196","text":"197"},{"range":"198","text":"187"},{"range":"199","text":"189"},{"range":"200","text":"187"},{"range":"201","text":"189"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"202","text":"203"},[2341,2342],"",[2341,2341],"\\",[2366,2367],[2366,2366],[2553,2554],[2553,2553],[2578,2579],[2578,2578],[1439,1441],"[verifyEmail]",[2383,2384],[2383,2383],[2408,2409],[2408,2408],[1176,1195],"[callQuery, history, location]"]