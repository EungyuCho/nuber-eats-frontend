[{"C:\\nodejs\\nuber-eats-front\\src\\index.tsx":"1","C:\\nodejs\\nuber-eats-front\\src\\reportWebVitals.ts":"2","C:\\nodejs\\nuber-eats-front\\src\\App.tsx":"3","C:\\nodejs\\nuber-eats-front\\src\\apollo.ts":"4","C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-out-router.tsx":"5","C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-in-router.tsx":"6","C:\\nodejs\\nuber-eats-front\\src\\pages\\login.tsx":"7","C:\\nodejs\\nuber-eats-front\\src\\pages\\create-account.tsx":"8","C:\\nodejs\\nuber-eats-front\\src\\components\\form-error.tsx":"9","C:\\nodejs\\nuber-eats-front\\src\\components\\button.tsx":"10","C:\\nodejs\\nuber-eats-front\\src\\__generated__\\globalTypes.ts":"11","C:\\nodejs\\nuber-eats-front\\src\\constant.ts":"12","C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\restaurants.tsx":"13","C:\\nodejs\\nuber-eats-front\\src\\pages\\404.tsx":"14","C:\\nodejs\\nuber-eats-front\\src\\components\\underline-link.tsx":"15","C:\\nodejs\\nuber-eats-front\\src\\components\\header.tsx":"16","C:\\nodejs\\nuber-eats-front\\src\\components\\nuber-logo.tsx":"17","C:\\nodejs\\nuber-eats-front\\src\\hooks\\useMe.tsx":"18","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\confirm-email.tsx":"19","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\edit-profile.tsx":"20","C:\\nodejs\\nuber-eats-front\\src\\components\\restaurant.tsx":"21","C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\search.tsx":"22","C:\\nodejs\\nuber-eats-front\\src\\fragments.ts":"23"},{"size":755,"mtime":1611752144153,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":399,"mtime":1611539939751,"results":"27","hashOfConfig":"25"},{"size":1040,"mtime":1611759720312,"results":"28","hashOfConfig":"25"},{"size":594,"mtime":1611804637869,"results":"29","hashOfConfig":"25"},{"size":1337,"mtime":1612275575196,"results":"30","hashOfConfig":"25"},{"size":3774,"mtime":1611837654913,"results":"31","hashOfConfig":"25"},{"size":4213,"mtime":1611808013432,"results":"32","hashOfConfig":"25"},{"size":238,"mtime":1611559867753,"results":"33","hashOfConfig":"25"},{"size":489,"mtime":1611728043820,"results":"34","hashOfConfig":"25"},{"size":1002,"mtime":1612280362178,"results":"35","hashOfConfig":"25"},{"size":50,"mtime":1611749385860,"results":"36","hashOfConfig":"25"},{"size":4246,"mtime":1612279261225,"results":"37","hashOfConfig":"25"},{"size":585,"mtime":1612183566189,"results":"38","hashOfConfig":"25"},{"size":311,"mtime":1611805253112,"results":"39","hashOfConfig":"25"},{"size":970,"mtime":1612177827712,"results":"40","hashOfConfig":"25"},{"size":444,"mtime":1611813377318,"results":"41","hashOfConfig":"25"},{"size":298,"mtime":1611813610997,"results":"42","hashOfConfig":"25"},{"size":1810,"mtime":1612183599299,"results":"43","hashOfConfig":"25"},{"size":3026,"mtime":1612183633316,"results":"44","hashOfConfig":"25"},{"size":605,"mtime":1612273541111,"results":"45","hashOfConfig":"25"},{"size":1379,"mtime":1612280981577,"results":"46","hashOfConfig":"25"},{"size":231,"mtime":1612279167900,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"hkr554",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\nodejs\\nuber-eats-front\\src\\index.tsx",[],["102","103"],"C:\\nodejs\\nuber-eats-front\\src\\reportWebVitals.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\App.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\apollo.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-out-router.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-in-router.tsx",["104"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Restaurants } from \"../pages/client/restaurants\";\r\nimport { Header } from \"../components/header\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { NotFound } from \"../pages/404\";\r\nimport { ConfirmEmail } from \"../pages/user/confirm-email\";\r\nimport { EditProfile } from \"../pages/user/edit-profile\";\r\nimport { Search } from \"../pages/client/search\";\r\n\r\nconst ClientRoutes = [\r\n  <Route key={1} path=\"/\" exact>\r\n    <Restaurants />\r\n  </Route>,\r\n  <Route key={2} path=\"/confirm\" exact>\r\n    <ConfirmEmail />\r\n  </Route>,\r\n  <Route key={3} path=\"/edit-profile\" exact>\r\n    <EditProfile />\r\n  </Route>,\r\n  <Route key={4} path=\"/search\" exact>\r\n    <Search />\r\n  </Route>,\r\n];\r\n\r\nexport const LoggedInRouter = () => {\r\n  const { data, loading, error } = useMe();\r\n\r\n  if (!data || loading || error) {\r\n    return (\r\n      <div className=\"h-screen flex justify-center items-center\">\r\n        <span className=\"font-medium text-xl tracking-wide\">loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        {data.me.role === \"Client\" && ClientRoutes}\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\login.tsx",["105","106"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\nimport { Button } from \"../components/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constant\";\r\nimport { NuberLogo } from \"../components/nuber-logo\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authTokenVar(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-28 lg:mt-10\">\r\n      <Helmet>\r\n        <title>Login | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <NuberLogo mb={10} />\r\n        <h4 className=\"w-full test-left text-3xl mb-5 font-bold\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"log in\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?{\" \"}\r\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\create-account.tsx",["107","108","109"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UnderlineLink } from \"../components/underline-link\";\r\nimport { NuberLogo } from \"../components/nuber-logo\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: {\r\n          createAccountInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-28 lg:mt-10\">\r\n      <Helmet>\r\n        <title>Create Account | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <NuberLogo mb={10} />\r\n        <h4 className=\"w-full test-left text-3xl mb-5 font-bold\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          <select name=\"role\" ref={register({ required: true })}>\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={false}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account? <UnderlineLink to=\"/\" message=\"Log in now\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\components\\form-error.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\button.tsx",["110"],"import react from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    className={`text-lg font-medium text-white py-4 transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-500 hover:bg-lime-600\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading...\" : actionText}\r\n  </button>\r\n);\r\n","C:\\nodejs\\nuber-eats-front\\src\\__generated__\\globalTypes.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\constant.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\restaurants.tsx",["111"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Restaurant } from \"../../components/restaurant\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  restaurantsPageQuery,\r\n  restaurantsPageQueryVariables,\r\n} from \"../../__generated__/restaurantsPageQuery\";\r\n\r\nconst RESTAURANTS_QUERY = gql`\r\n  query restaurantsPageQuery($input: RestaurantsInput!) {\r\n    allCategories {\r\n      ok\r\n      error\r\n      categories {\r\n        id\r\n        name\r\n        coverImg\r\n        slug\r\n        restaurantCount\r\n      }\r\n    }\r\n    restaurants(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      results {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\ninterface IFormProps {\r\n  searchTerm: string;\r\n}\r\n\r\nexport const Restaurants = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { data, loading } = useQuery<\r\n    restaurantsPageQuery,\r\n    restaurantsPageQueryVariables\r\n  >(RESTAURANTS_QUERY, {\r\n    variables: {\r\n      input: {\r\n        page,\r\n      },\r\n    },\r\n  });\r\n\r\n  const onNextPageClick = () => setPage((current) => current + 1);\r\n  const onPrevPageClick = () => setPage((current) => current - 1);\r\n  const { register, handleSubmit, getValues } = useForm();\r\n  const history = useHistory();\r\n  const onSearchSubmit = () => {\r\n    const { searchTerm } = getValues();\r\n    history.push({\r\n      pathname: \"/search\",\r\n      /*state: {\r\n        searchTerm,\r\n      },*/\r\n      search: `?term=${searchTerm}`,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Home | Nuber Eats</title>\r\n      </Helmet>\r\n      <form\r\n        onSubmit={handleSubmit(onSearchSubmit)}\r\n        className=\"bg-gray-800 w-full py-40 flex items-center justify-center\"\r\n      >\r\n        <input\r\n          ref={register({ required: true, min: 3 })}\r\n          name=\"searchTerm\"\r\n          type=\"Search\"\r\n          className=\"input rounded-md w-3/4 md:w-3/12 border-0\"\r\n          placeholder=\"Search restaurants...\"\r\n        />\r\n      </form>\r\n      {!loading && (\r\n        <div className=\"max-w-screen-2xl mx-auto mt-8\">\r\n          <div className=\"flex justify-around max-w-sm mx-auto\">\r\n            {data?.allCategories.categories?.map((category) => (\r\n              <div\r\n                key={category.id}\r\n                className=\"flex flex-col group text-center cursor-pointer\"\r\n              >\r\n                <div\r\n                  className=\"w-16 h-16 rounded-full bg-cover group-hover:bg-gray-100\"\r\n                  style={{ backgroundImage: `url(${category.coverImg})` }}\r\n                ></div>\r\n                <span className=\"mt-1 text-sm font-semibold\">\r\n                  {category.name}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"grid md:grid-cols-3 mt-10 gap-x-5 gap-y-2\">\r\n            {data?.restaurants.results?.map((restaurant) => (\r\n              <Restaurant\r\n                key={restaurant.id}\r\n                id={restaurant.id + \"\"}\r\n                coverImg={restaurant.coverImg}\r\n                name={restaurant.name}\r\n                categoryName={restaurant.category?.name}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"grid grid-cols-3 text-center max-w-md items-center mx-auto mt-10\">\r\n            {page > 1 ? (\r\n              <button\r\n                onClick={onPrevPageClick}\r\n                className=\"font-semibold text-2xl focus:outline-none\"\r\n              >\r\n                &larr;\r\n              </button>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <span className=\"mx-5\">\r\n              Page {page} of {data?.restaurants.totalPages}\r\n            </span>\r\n            {page !== data?.restaurants.totalPages && (\r\n              <button\r\n                onClick={onNextPageClick}\r\n                className=\"font-semibold text-2xl focus:outline-none\"\r\n              >\r\n                &rarr;\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\404.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\underline-link.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\header.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\nuber-logo.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\hooks\\useMe.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\confirm-email.tsx",["112","113"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    console.log(code);\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-bold\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-800 text-sm\">\r\n        Please wait, don't close this page...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\edit-profile.tsx",["114","115","116"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { data } from \"autoprefixer\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const onCompleted = (data: editProfile) => {\r\n    const {\r\n      editProfile: { ok },\r\n    } = data;\r\n\r\n    if (ok && userData) {\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n      if (prevEmail !== newEmail) {\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            email: newEmail,\r\n            verified: false,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edit Profile | Nuber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-bold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        className=\"grid gap-6 max-w-screen-sm mt-5 w-full mb-5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          name=\"email\"\r\n          className=\"input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          ref={register}\r\n          name=\"password\"\r\n          className=\"input\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Svae Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\components\\restaurant.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\search.tsx",["117","118"],"C:\\nodejs\\nuber-eats-front\\src\\fragments.ts",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":4,"column":3,"nodeType":"125","messageId":"126","endLine":4,"endColumn":11},{"ruleId":"127","severity":1,"message":"128","line":88,"column":34,"nodeType":"129","messageId":"130","endLine":88,"endColumn":35,"suggestions":"131"},{"ruleId":"127","severity":1,"message":"128","line":88,"column":59,"nodeType":"129","messageId":"130","endLine":88,"endColumn":60,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"133","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":95,"column":34,"nodeType":"129","messageId":"130","endLine":95,"endColumn":35,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"128","line":95,"column":59,"nodeType":"129","messageId":"130","endLine":95,"endColumn":60,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"136","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"137","line":39,"column":11,"nodeType":"125","messageId":"126","endLine":39,"endColumn":21},{"ruleId":"123","severity":1,"message":"138","line":50,"column":12,"nodeType":"125","messageId":"126","endLine":50,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":59,"column":6,"nodeType":"141","endLine":59,"endColumn":8,"suggestions":"142"},{"ruleId":"123","severity":1,"message":"143","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":93,"column":32,"nodeType":"129","messageId":"130","endLine":93,"endColumn":33,"suggestions":"144"},{"ruleId":"127","severity":1,"message":"128","line":93,"column":57,"nodeType":"129","messageId":"130","endLine":93,"endColumn":58,"suggestions":"145"},{"ruleId":"123","severity":1,"message":"138","line":33,"column":12,"nodeType":"125","messageId":"126","endLine":33,"endColumn":13},{"ruleId":"139","severity":1,"message":"146","line":45,"column":6,"nodeType":"141","endLine":45,"endColumn":25,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["150","151"],["152","153"],"'Link' is defined but never used.",["154","155"],["156","157"],"'react' is defined but never used.","'IFormProps' is defined but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'data' is defined but never used.",["159","160"],["161","162"],"React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"messageId":"164","fix":"165","desc":"166"},{"messageId":"167","fix":"168","desc":"169"},{"messageId":"164","fix":"170","desc":"166"},{"messageId":"167","fix":"171","desc":"169"},{"messageId":"164","fix":"172","desc":"166"},{"messageId":"167","fix":"173","desc":"169"},{"messageId":"164","fix":"174","desc":"166"},{"messageId":"167","fix":"175","desc":"169"},{"desc":"176","fix":"177"},{"messageId":"164","fix":"178","desc":"166"},{"messageId":"167","fix":"179","desc":"169"},{"messageId":"164","fix":"180","desc":"166"},{"messageId":"167","fix":"181","desc":"169"},{"desc":"182","fix":"183"},"removeEscape",{"range":"184","text":"185"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"186","text":"187"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"188","text":"185"},{"range":"189","text":"187"},{"range":"190","text":"185"},{"range":"191","text":"187"},{"range":"192","text":"185"},{"range":"193","text":"187"},"Update the dependencies array to be: [verifyEmail]",{"range":"194","text":"195"},{"range":"196","text":"185"},{"range":"197","text":"187"},{"range":"198","text":"185"},{"range":"199","text":"187"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"200","text":"201"},[2341,2342],"",[2341,2341],"\\",[2366,2367],[2366,2366],[2553,2554],[2553,2553],[2578,2579],[2578,2578],[1439,1441],"[verifyEmail]",[2383,2384],[2383,2383],[2408,2409],[2408,2408],[1176,1195],"[callQuery, history, location]"]