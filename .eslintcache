[{"C:\\nodejs\\nuber-eats-front\\src\\index.tsx":"1","C:\\nodejs\\nuber-eats-front\\src\\reportWebVitals.ts":"2","C:\\nodejs\\nuber-eats-front\\src\\App.tsx":"3","C:\\nodejs\\nuber-eats-front\\src\\apollo.ts":"4","C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-out-router.tsx":"5","C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-in-router.tsx":"6","C:\\nodejs\\nuber-eats-front\\src\\pages\\login.tsx":"7","C:\\nodejs\\nuber-eats-front\\src\\pages\\create-account.tsx":"8","C:\\nodejs\\nuber-eats-front\\src\\components\\form-error.tsx":"9","C:\\nodejs\\nuber-eats-front\\src\\components\\button.tsx":"10","C:\\nodejs\\nuber-eats-front\\src\\__generated__\\globalTypes.ts":"11","C:\\nodejs\\nuber-eats-front\\src\\constant.ts":"12","C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\restaurants.tsx":"13","C:\\nodejs\\nuber-eats-front\\src\\pages\\404.tsx":"14","C:\\nodejs\\nuber-eats-front\\src\\components\\underline-link.tsx":"15","C:\\nodejs\\nuber-eats-front\\src\\components\\header.tsx":"16","C:\\nodejs\\nuber-eats-front\\src\\components\\nuber-logo.tsx":"17","C:\\nodejs\\nuber-eats-front\\src\\hooks\\useMe.tsx":"18","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\confirm-email.tsx":"19","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\edit-profile.tsx":"20"},{"size":755,"mtime":1611752144153,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":399,"mtime":1611539939751,"results":"24","hashOfConfig":"22"},{"size":1040,"mtime":1611759720312,"results":"25","hashOfConfig":"22"},{"size":594,"mtime":1611804637869,"results":"26","hashOfConfig":"22"},{"size":1367,"mtime":1612177427683,"results":"27","hashOfConfig":"22"},{"size":3774,"mtime":1611837654913,"results":"28","hashOfConfig":"22"},{"size":4213,"mtime":1611808013432,"results":"29","hashOfConfig":"22"},{"size":238,"mtime":1611559867753,"results":"30","hashOfConfig":"22"},{"size":489,"mtime":1611728043820,"results":"31","hashOfConfig":"22"},{"size":853,"mtime":1612179128313,"results":"32","hashOfConfig":"22"},{"size":50,"mtime":1611749385860,"results":"33","hashOfConfig":"22"},{"size":86,"mtime":1611803445949,"results":"34","hashOfConfig":"22"},{"size":465,"mtime":1611837654913,"results":"35","hashOfConfig":"22"},{"size":311,"mtime":1611805253112,"results":"36","hashOfConfig":"22"},{"size":970,"mtime":1612177827712,"results":"37","hashOfConfig":"22"},{"size":444,"mtime":1611813377318,"results":"38","hashOfConfig":"22"},{"size":298,"mtime":1611813610997,"results":"39","hashOfConfig":"22"},{"size":1681,"mtime":1612177089127,"results":"40","hashOfConfig":"22"},{"size":2897,"mtime":1612182398807,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"hkr554",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\nodejs\\nuber-eats-front\\src\\index.tsx",[],["89","90"],"C:\\nodejs\\nuber-eats-front\\src\\reportWebVitals.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\App.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\apollo.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-out-router.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\routers\\logged-in-router.tsx",["91"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Restaurants } from \"../pages/client/restaurants\";\r\nimport { Header } from \"../components/header\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { NotFound } from \"../pages/404\";\r\nimport { ConfirmEmail } from \"../pages/user/confirm-email\";\r\nimport { EditProfile } from \"../pages/user/edit-profile\";\r\n\r\nconst ClientRoutes = [\r\n  <Route key={1} path=\"/\" exact>\r\n    <Restaurants />\r\n  </Route>,\r\n  <Route key={2} path=\"/confirm\" exact>\r\n    <ConfirmEmail />\r\n  </Route>,\r\n  <Route key={3} path=\"/edit-profile\" exact>\r\n    <EditProfile />\r\n  </Route>,\r\n];\r\n\r\nexport const LoggedInRouter = () => {\r\n  const { data, loading, error } = useMe();\r\n\r\n  if (!data || loading || error) {\r\n    return (\r\n      <div className=\"h-screen flex justify-center items-center\">\r\n        <span className=\"font-medium text-xl tracking-wide\">loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        {data.me.role === \"Client\" && ClientRoutes}\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n        {/* <Redirect to=\"/\" /> */}\r\n        {/* <h1>{data.me.role}</h1>\r\n        <button onClick={() => isLoggedInVar(false)}>Log Out</button> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\login.tsx",["92","93"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\nimport { Button } from \"../components/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constant\";\r\nimport { NuberLogo } from \"../components/nuber-logo\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authTokenVar(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-28 lg:mt-10\">\r\n      <Helmet>\r\n        <title>Login | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <NuberLogo mb={10} />\r\n        <h4 className=\"w-full test-left text-3xl mb-5 font-bold\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"log in\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?{\" \"}\r\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\create-account.tsx",["94","95","96"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UnderlineLink } from \"../components/underline-link\";\r\nimport { NuberLogo } from \"../components/nuber-logo\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: {\r\n          createAccountInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-28 lg:mt-10\">\r\n      <Helmet>\r\n        <title>Create Account | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <NuberLogo mb={10} />\r\n        <h4 className=\"w-full test-left text-3xl mb-5 font-bold\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-3\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          <select name=\"role\" ref={register({ required: true })}>\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={false}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account? <UnderlineLink to=\"/\" message=\"Log in now\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\components\\form-error.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\button.tsx",["97"],"import react from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    className={`text-lg font-medium text-white py-4 transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-500 hover:bg-lime-600\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading...\" : actionText}\r\n  </button>\r\n);\r\n","C:\\nodejs\\nuber-eats-front\\src\\__generated__\\globalTypes.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\constant.ts",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\client\\restaurants.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\404.tsx",["98"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UnderlineLink } from \"../components/underline-link\";\r\n\r\nexport const NotFound = () => (\r\n  <div className=\"h-screen flex flex-col items-center justify-center\">\r\n    <h2 className=\"font-semibold text-xl mb-3\">Page Not Found.</h2>\r\n    <h4 className=\"font-medium text-base mb-5\">\r\n      The page you're looking for does not exist or has moved.\r\n    </h4>\r\n    <UnderlineLink to=\"/\" message=\"Go back home &rarr;\" />\r\n  </div>\r\n);\r\n","C:\\nodejs\\nuber-eats-front\\src\\components\\underline-link.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\header.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\components\\nuber-logo.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\hooks\\useMe.tsx",[],"C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\confirm-email.tsx",["99","100"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    console.log(code);\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <h2 className=\"text-lg mb-1 font-bold\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-800 text-sm\">\r\n        Please wait, don't close this page...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\nodejs\\nuber-eats-front\\src\\pages\\user\\edit-profile.tsx",["101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":3,"nodeType":"110","messageId":"111","endLine":4,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":88,"column":34,"nodeType":"114","messageId":"115","endLine":88,"endColumn":35,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":88,"column":59,"nodeType":"114","messageId":"115","endLine":88,"endColumn":60,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":95,"column":34,"nodeType":"114","messageId":"115","endLine":95,"endColumn":35,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"113","line":95,"column":59,"nodeType":"114","messageId":"115","endLine":95,"endColumn":60,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"118","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"122","line":49,"column":12,"nodeType":"110","messageId":"111","endLine":49,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":58,"column":6,"nodeType":"125","endLine":58,"endColumn":8,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"127","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":89,"column":32,"nodeType":"114","messageId":"115","endLine":89,"endColumn":33,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"113","line":89,"column":57,"nodeType":"114","messageId":"115","endLine":89,"endColumn":58,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["132","133"],["134","135"],"'Link' is defined but never used.",["136","137"],["138","139"],"'react' is defined but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'data' is defined but never used.",["141","142"],["143","144"],"no-global-assign","no-unsafe-negation",{"messageId":"145","fix":"146","desc":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"148","fix":"152","desc":"150"},{"messageId":"145","fix":"153","desc":"147"},{"messageId":"148","fix":"154","desc":"150"},{"messageId":"145","fix":"155","desc":"147"},{"messageId":"148","fix":"156","desc":"150"},{"desc":"157","fix":"158"},{"messageId":"145","fix":"159","desc":"147"},{"messageId":"148","fix":"160","desc":"150"},{"messageId":"145","fix":"161","desc":"147"},{"messageId":"148","fix":"162","desc":"150"},"removeEscape",{"range":"163","text":"164"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"165","text":"166"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"167","text":"164"},{"range":"168","text":"166"},{"range":"169","text":"164"},{"range":"170","text":"166"},{"range":"171","text":"164"},{"range":"172","text":"166"},"Update the dependencies array to be: [verifyEmail]",{"range":"173","text":"174"},{"range":"175","text":"164"},{"range":"176","text":"166"},{"range":"177","text":"164"},{"range":"178","text":"166"},[2341,2342],"",[2341,2341],"\\",[2366,2367],[2366,2366],[2553,2554],[2553,2553],[2578,2579],[2578,2578],[1393,1395],"[verifyEmail]",[2254,2255],[2254,2254],[2279,2280],[2279,2279]]